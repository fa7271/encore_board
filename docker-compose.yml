version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    platform: linux/amd64
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    platform: linux/amd64
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#version: '3'
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#      - "9093:9093" # 외부 접속용 포트 추가
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      # 내부 및 외부 리스너에 서로 다른 포트를 사용하도록 수정
#      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093


#  mariadb:
#    image: mariadb:latest
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: 1234
#      MYSQL_DATABASE: harbor_db
#      MYSQL_USER: admin
#      MYSQL_PASSWORD: 1234
#    ports:
#      - "3306:3306"
#    networks:
#      - harbor_network
#    volumes:
#      - image-path:/tmp
#
#  harbor_employee:
#    build:
#      context: .
#      dockerfile: DockerFile.harbor_employee
#    ports:
#      - "8004:8004"
#    networks:
#      - harbor_network
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/harbor_employee
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: 1234
#    depends_on:
#      - mariadb
#
#  harbor_login:
#    build:
#      context: .
#      dockerfile: DockerFile.harbor_login
#    ports:
#      - "8001:8001"
#    networks:
#      - harbor_network
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/harbor_login
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: 1234
#    depends_on:
#      - mariadb
#
#  harbor_salary:
#    build:
#      context: .
#      dockerfile: DockerFile.harbor_salary
#    ports:
#      - "8002:8002"
#    networks:
#      - harbor_network
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/harbor_salary
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: 1234
#    depends_on:
#      - mariadb
#
#  harbor_total:
#    build:
#      context: .
#      dockerfile: DockerFile.harbor_total
#    ports:
#      - "8004:8004"
#    networks:
#      - harbor_network
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/harbor_total
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: 1234
#    depends_on:
#      - mariadb
#
#  gateway:
#    build:
#      context: .
#      dockerfile: DockerFile.gateway
#    ports:
#      - "8000:8000"
#    networks:
#      - harbor_network
#    environment:
#      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka:8761/eureka
#
#  eureka:
#    build:
#      context: .
#      dockerfile: DockerFile.eureka
#    ports:
#      - "8761:8761"
#    networks:
#      - harbor_network